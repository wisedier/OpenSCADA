resource_name: "CPU_001"
input_mem_size_bytes: 10000
output_mem_size_bytes: 10000

resource_global_var {
    name: "__RESOURCE_GLOBAL__"
    datatype_field {
        field_name: "current_theta"
        field_datatype_name: "REAL"
        intf_type : VAR_EXPLICIT_STORAGE
        field_storage_spec {
            mem_type: INPUT_MEM
            byte_offset: 1
            bit_offset: 0
        }
    }
    datatype_field {
        field_name: "force"
        field_datatype_name: "REAL"
        intf_type : VAR_EXPLICIT_STORAGE
        field_storage_spec {
            mem_type: OUTPUT_MEM
            byte_offset: 1
            bit_offset: 0
        }
    }
}

pou_var {
    name: "DivideFB"
    pou_type: FB
    datatype_field {
        field_name: "Dividend"
        field_datatype_name: "REAL"
        intf_type: VAR_INPUT
    }
    datatype_field {
        field_name: "Divisor"
        field_datatype_name: "REAL"
        intf_type: VAR_INPUT
    }
    datatype_field {
        field_name: "Quotient"
        field_datatype_name: "INT"
        intf_type: VAR_OUTPUT
    }
    datatype_field {
        field_name: "DivRem"
        field_datatype_name: "REAL"
        intf_type: VAR_OUTPUT
    }
    datatype_field {
        field_name: "DivError"
        field_datatype_name: "BOOL"
        intf_type: VAR_OUTPUT
    }

    code_body {
        insn: "LD 0.0" 
        insn: "EQ Divisor" 
        insn: "JMPC Error" 
        insn: "LD Dividend" 
        insn: "DIV Divisor"
        insn: "REAL_TO_INT"
        insn: "ST Quotient"
        insn: "MUL Divisor"
        insn: "ST DivRem" 
        insn: "LD Dividend"
        insn: "SUB DivRem"
        insn: "ST DivRem"
        insn: "LD FALSE"
        insn: "ST DivError"
        insn: "JMP End"
        insn: "Error: LD 0"
        insn: "ST Quotient"
        insn: "ST DivRem"
        insn: "LD TRUE"
        insn: "ST DivError"
        insn: "End: RET"
    }
}

pou_var {
    name: "GetControlInputFB"
    pou_type: FB
    datatype_field {
        field_name: "time_delta"
        field_datatype_name: "REAL"
        intf_type: VAR_INPUT
    }
    datatype_field {
        field_name: "curr_error"
        field_datatype_name: "REAL"
        intf_type: VAR_INPUT
    }
    datatype_field {
        field_name: "prev_error"
        field_datatype_name: "REAL"
        intf_type: VAR_INPUT
    }
    datatype_field {
        field_name: "integral"
        field_datatype_name: "REAL"
        intf_type: VAR_INPUT
    }
    
    datatype_field {
        field_name: "g"
        field_datatype_name: "REAL"
        initial_value: "9.81"
        intf_type: VAR_TEMP
    }
    datatype_field {
        field_name: "Kp"
        field_datatype_name: "REAL"
        initial_value: "-150.0"
        intf_type: VAR_TEMP
    }
    datatype_field {
        field_name: "Kd"
        field_datatype_name: "REAL"
        initial_value: "-20.0"
        intf_type: VAR_TEMP
    }
    datatype_field {
        field_name: "Ki"
        field_datatype_name: "REAL"
        initial_value: "-20.0"
        intf_type: VAR_TEMP
    }

    datatype_field {
        field_name: "derivative"
        field_datatype_name: "REAL"
        intf_type: VAR_TEMP
    }

    datatype_field {
        field_name: "integral"
        field_datatype_name: "REAL"
        intf_type: VAR_IN_OUT
    }

    datatype_field {
        field_name: "force"
        field_datatype_name: "REAL"
        intf_type: VAR_OUTPUT
    }

    code_body {
        insn: "LD curr_error"
        insn: "SUB prev_error"
        insn: "DIV time_delta"
        insn: "ST derivative"
        insn: "LD curr_error"
        insn: "MUL time_delta"
        insn: "ADD integral"
        insn: "ST integral"
        insn: "LD curr_error"
        insn: "MUL Kp"
        insn: "ST force"
        insn: "LD derivative"
        insn: "MUL Kd"
        insn: "ADD force"
        insn: "ST force"
        insn: "LD integral"
        insn: "MUL Ki"
        insn: "ADD force"
        insn: "ST force"
    }
}

pou_var {
    name: "PID_CONTROL"
    pou_type: PROGRAM
    datatype_field {
        field_name: "dummy_in"
        field_datatype_name: "INT"
        intf_type: VAR_INPUT
    }
    datatype_field {
        field_name: "dummy_out"
        field_datatype_name: "INT"
        intf_type: VAR_OUTPUT
    }
    datatype_field {
        field_name: "prev_time"
        field_datatype_name: "TIME"
        intf_type: VAR
    }
    datatype_field {
        field_name: "prev_theta"
        field_datatype_name: "REAL"
        intf_type: VAR
    }
    datatype_field {
        field_name: "prev_error"
        field_datatype_name: "REAL"
        intf_type: VAR
    }
    datatype_field {
        field_name: "prev_integral"
        field_datatype_name: "REAL"
        initial_value: "0.0"
        intf_type: VAR
    }

    datatype_field {
        field_name: "div"
        field_datatype_name: "DivideFB"
        intf_type: VAR
    }

    datatype_field {
        field_name: "get_control"
        field_datatype_name: "GetControlInputFB"
        intf_type: VAR
    }

    datatype_field {
        field_name: "started"
        field_datatype_name: "BOOL"
        initial_value: "False"
        intf_type: VAR
    }

    datatype_field {
        field_name: "curr_time"
        field_datatype_name: "TIME"
        intf_type: VAR_TEMP
    }

    datatype_field {
        field_name: "time_delta"
        field_datatype_name: "REAL"
        intf_type: VAR_TEMP
    }
    datatype_field {
        field_name: "two_pi"
        field_datatype_name: "REAL"
        initial_value: "6.28"
        intf_type: VAR_TEMP
    }

    datatype_field {
        field_name: "tmp"
        field_datatype_name: "REAL"
        initial_value: "0.0"
        intf_type: VAR_TEMP
    } 
    datatype_field {
        field_name: "curr_error"
        field_datatype_name: "REAL"
        intf_type: VAR_TEMP
    }
    datatype_field {
        field_name: "current_theta"
        field_datatype_name: "REAL"
        intf_type: VAR_EXTERNAL
    }
    datatype_field {
        field_name: "force"
        field_datatype_name: "REAL"
        intf_type: VAR_EXTERNAL
    }
    code_body {
        # If not started, store prev_time, prev_error
        insn: "LD started"
        insn: "JMPC already_started"
        insn: "LD TRUE"
        insn: "ST started"
        insn: "GTOD"
        insn: "ST prev_time"
        insn: "CAL div(Dividend:= current_theta, Divisor:= two_pi)"
        insn: "LD div.DivRem"
        insn: "ST tmp"
        insn: "LD 3.14"
        insn: "LT tmp"
        insn: "JMPCN else1"
        insn: "LD tmp"
        insn: "SUB two_pi"
        insn: "ST tmp"
        insn: "else1: LD tmp"
        insn: "ST prev_error"
        insn: "RET"


        insn: "already_started: GTOD"
        insn: "ST curr_time"
        insn: "SUB prev_time"
        insn: "TIME_TO_REAL"
        insn: "ST time_delta"
        insn: "LD curr_time"
        insn: "ST prev_time"
        insn: "CAL div(Dividend:= current_theta, Divisor:= two_pi)"
        insn: "LD div.DivRem"
        insn: "ST tmp"
        insn: "LD 3.14"
        insn: "LT tmp"
        insn: "JMPCN else"
        insn: "LD tmp"
        insn: "SUB two_pi"
        insn: "ST tmp"
        insn: "else: LD tmp"
        insn: "ST curr_error"
        insn: "CAL get_control(time_delta:= time_delta, curr_error:= curr_error, prev_error:= prev_error, integral:= prev_integral)"
        insn: "LD get_control.force"
        insn: "ST force"
        insn: "LD curr_error"
        insn: "ST prev_error"
        insn: "RET"
    }
}

interval_task {
    task_name: "CYCLIC_TASK"
    priority: 1
    interval_task_params {
        interval_ms: 10
    }
}

programs {
    program_name: "PID_CONTROL"
    pou_variable_type: "PID_CONTROL"
    task_name: "CYCLIC_TASK"
    initialization_maps {
        pou_variable_field_name: "dummy_in"
        mapped_variable_field_name: "start_int"
    }
    initialization_maps {
        pou_variable_field_name: "dummy_out"
        mapped_variable_field_name: "global_int_var"
    }
}
